<%- |
  String $module_enabled,
  Stdlib::Absolutepath $abrt_send_log_file,
  Stdlib::Absolutepath $spooldir,
  Boolean $aggregate_reports,
  Integer[0] $send_period = 600,
  Optional[String] $faf_server_url = undef,
  Boolean $faf_server_ssl_noverify = true,
  Optional[Stdlib::Absolutepath] $faf_server_ssl_cert = undef,
  Optional[Stdlib::Absolutepath] $faf_server_ssl_key = undef,
| -%>
---
:enabled: <%= $module_enabled %>
# Log file for the forwarding script.
:abrt_send_log_file: <%= $abrt_send_log_file %>
# Directory where uReports are stored before they are sent
:spooldir: <%= $spooldir %>
# Merge duplicate reports before sending (requires the satyr gem)
:aggregate_reports: <%= $aggregate_reports %>
# Period (in seconds) after which collected reports are forwarded. Meaningful
# only if smart-proxy-abrt-send is run as a daemon (not from cron).
:send_period: <%= $send_period %>
# FAF server instance the reports will be forwarded to (optional)
<% if $faf_server_url { -%>
:server_url: <%= $faf_server_url %>
# Set to true if FAF server uses self-signed certificate
:server_ssl_noverify: <%= $faf_server_ssl_noverify %>
<% } else { %>
#:server_url: 
# Set to true if FAF server uses self-signed certificate
#:server_ssl_noverify: 
<% } %>
# Following two options enable client authentication to FAF server
<% if $faf_server_ssl_cert and $faf_server_ssl_key { -%>
:server_ssl_cert: <%= $faf_server_ssl_cert %>
:server_ssl_key: <%= $faf_server_ssl_key %>
<% } else { %>
#:server_ssl_cert: 
#:server_ssl_key: 
<% } %>
